_gh_org=OpenVoiceOS
_gh_proj=ovos-audio
pkgname=python-ovos-audio
_name=${pkgname#python-}
_unit_name="ovos-audio-messagebus"
_commit='5ba8939c0a1db0429d2fb3bd4a73b60b0fd95053'
pkgver='0.1.0'
pkgrel=00
pkgdesc='The "mouth" of the OVOS assistant! Handles TTS generation and audio playback'
arch=('any')
url='https://github.com/OpenVoiceOS/ovos-audio/'
license=('')
depends=('ovos-core' 'ovos-service-base' 'ovos-messagebus-server' 'python' 'python-sdnotify' \
'python-ovos-ocp-audio-plugin>=0.0.5a3' #>=0.0.5a3,~=0.0 \
'python-ovos-ocp-files-plugin' \
'python-ovos-ocp-m3u-plugin' \
'python-ovos-ocp-news-plugin' \
'python-ovos-ocp-rss-plugin' \
#'python-ovos-tts-plugin-mimic3-server' \
)
makedepends=(python-build python-installer python-wheel python-setuptools)
provides=("$_unit_name")
conflicts=("$_unit_name")

#### Automatically generated dependencies. Do not edit.
depends+=(
'python-ovos-bus-client>=0.0.8' # ovos-bus-client>=0.0.8,~=0.0
'python-ovos-config>=0.0.13' # ovos-config>=0.0.13,~=0.0
'python-ovos-plugin-manager>=0.0.26' # ovos-plugin-manager>=0.0.26,~=0.0
'python-ovos-utils>=0.0.38' # ovos-utils>=0.0.38,~=0.0
)
conflicts+=(

)
optdepends+=(
'python-ovos-audio-plugin-simple>=0.0.2a7' # ovos_audio_plugin_simple>=0.0.2a7; extra == "extras"
'python-ovos-tts-plugin-server' # ovos-tts-plugin-server; extra == "extras"
)

#### End of automatically generated dependencies.
source=("https://github.com/$_gh_org/$_gh_proj/archive/$_commit.tar.gz" \
    "$_unit_name.service" \
    "ovos-systemd_audio_messagebus.py" \
    # "python-ovos-audio.install" \
)
sha256sums=('03883b513cfacb8473b09642c113ce99bde15378a0d047d4002fd1eada175ad0'
            '4ba09ae7f8387473d4da2220bba02dcd1288b988d96949cb916e847ea8d55ea8'
            'fd853f6345506ecb1ea81408ea34f8fec3f7701e0b576993ba23db85377859ee')

prepare() {
    cd "$srcdir"
    for patch in "../"*.patch; do
        if [ -f "$patch" ]; then
          echo "Applying patch $patch"
          patch --forward --strip=1 --input="${PWD}/${patch}" --directory="${srcdir}/${_name}-${_commit}"
        fi
    done
}

pkgver(){
    cd "$srcdir/$_name-$_commit"
    echo "$(python setup.py --version)"
}

build() {
    cd "$_name-$_commit"
    python -m build --wheel --no-isolation
}

check() {
    cd "$_name-$_commit"

    local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")
    local python_version=$(python -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')

    # nosetests
    # pytest
}

package() {
    cd "$_name-$_commit"

    echo "Installing $pkgname to $pkgdir"
    # some packages produce multiple wheels, install the one specific to the version of the package
    python -m installer --destdir="$pkgdir" dist/*$pkgver*.whl

    # Optional: Copy documentation files
    if [ -d "$srcdir/$pkgname/docs" ]; then
        mkdir -p "$pkgdir/usr/share/doc/$pkgname"  # Create doc directory
        cp -r "$srcdir/$pkgname/docs" "$pkgdir/usr/share/doc/$pkgname" || true
        chmod 644 "$pkgdir/usr/share/doc/$pkgname"/*.txt  || true # Set read permissions for documentation files
    fi
    
    # Optional: Remove unused files or directories
    # For example, removing unneeded binaries, license files, etc.
    # rm "$pkgdir/usr/bin/unneeded_binary"  # Remove unneeded binary
    # rm "$pkgdir/usr/share/doc/$pkgname/unneeded_license.txt"  # Remove unneeded license file

    # Search for license files in the original source directory
    mkdir -p $pkgdir/usr/share/licenses/$pkgname
    find "$srcdir" -maxdepth 2 -type f -name 'LICENSE*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +
    find "$srcdir" -maxdepth 1 -type f -name 'COPYING*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +

    mkdir -p "$pkgdir/usr/lib/systemd/system"
    install -Dm644 "$srcdir/$_unit_name.service" "$pkgdir/usr/lib/systemd/system"

    mkdir -p "$pkgdir/etc/systemd/system/$_unit_name.d/"
    install -Dm644 "$srcdir/ovos-systemd_audio_messagebus.py" "$pkgdir/etc/systemd/system/$_unit_name.d/"
}


################################################################################
# #
# # python-ovos-audio
# #
# ################################################################################
# 
# PYTHON_OVOS_AUDIO_VERSION = 3903c8cbb0072fc03a260020b5ef4e6e6b823377
# PYTHON_OVOS_AUDIO_SITE = $(call github,OpenVoiceOS,ovos-audio,$(PYTHON_OVOS_AUDIO_VERSION))
# PYTHON_OVOS_AUDIO_SETUP_TYPE = setuptools
# PYTHON_OVOS_AUDIO_LICENSE_FILES = LICENSE
# PYTHON_OVOS_AUDIO_ENV = MYCROFT_LOOSE_REQUIREMENTS=true
# 
# $(eval $(python-package))
# 




