_gh_org=OpenVoiceOS
_gh_proj=ovos-tts-plugin-marytts
pkgname=python-ovos-tts-plugin-marytts
groups=(ovos-tts-plugins)
provides=(ovos-tts-plugin)
_name=ovos-tts-plugin-marytts
_base_ver='207961106063ddc29f66b6b8f9077f85e7806480'
pkgver=0.0.1
pkgrel=1
pkgdesc='TTS Plugin for MaryTTS'
arch=('any')
url='https://github.com/OpenVoiceOS/ovos-tts-plugin-marytts/'
license=('')
depends=(python \
)
conflicts=()
makedepends=(python-build python-installer python-wheel python-setuptools)

source=("https://github.com/$_gh_org/$_gh_proj/archive/$_base_ver.tar.gz")
sha256sums=(
   #python-ovos-tts-plugin-marytts-207961106063ddc29f66b6b8f9077f85e7806480.tar.gz \
   7828b0d8039ea3a3dcac26e1e45b042cf50bb8b74a8c1847a0bea737b543e650)

prepare() {
    cd "$srcdir"
    for patch in "../"*.patch; do
        if [ -f "$patch" ]; then
          echo "Applying patch $patch"
          patch --forward --strip=1 --input="${PWD}/${patch}" --directory="${srcdir}/${_name}-${_base_ver}"
        fi
    done
}

pkgver(){
    cd "$srcdir/$_name-$_base_ver"
    echo "$(python setup.py --version)"
}

build() {
    cd "$_name-$_base_ver"
    python -m build --wheel --no-isolation
}

check() {
    cd "$_name-$_base_ver"

    local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")
    local python_version=$(python -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')

    # nosetests
    # pytest
}

package() {
    cd "$_name-$_base_ver"

    echo "Installing $pkgname to $pkgdir"
    # some packages produce multiple wheels, install the one specific to the version of the package
    python -m installer --destdir="$pkgdir" dist/*$pkgver*.whl

    # Optional: Copy documentation files
    if [ -d "$srcdir/$pkgname/docs" ]; then
        mkdir -p "$pkgdir/usr/share/doc/$pkgname"  # Create doc directory
        cp -r "$srcdir/$pkgname/docs" "$pkgdir/usr/share/doc/$pkgname" || true
        chmod 644 "$pkgdir/usr/share/doc/$pkgname"/*.txt  || true # Set read permissions for documentation files
    fi
    
    # Optional: Remove unused files or directories
    # For example, removing unneeded binaries, license files, etc.
    # rm "$pkgdir/usr/bin/unneeded_binary"  # Remove unneeded binary
    # rm "$pkgdir/usr/share/doc/$pkgname/unneeded_license.txt"  # Remove unneeded license file

    # Search for license files in the original source directory
    mkdir -p $pkgdir/usr/share/licenses/$pkgname
    find "$srcdir" -maxdepth 2 -type f -name 'LICENSE*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +
    find "$srcdir" -maxdepth 1 -type f -name 'COPYING*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +
}


################################################################################
# #
# # python-ovos-tts-plugin-marytts
# #
# ################################################################################
# 
# PYTHON_OVOS_TTS_PLUGIN_MARYTTS_VERSION = 207961106063ddc29f66b6b8f9077f85e7806480
# PYTHON_OVOS_TTS_PLUGIN_MARYTTS_SITE = $(call github,OpenVoiceOS,ovos-tts-plugin-marytts,$(PYTHON_OVOS_TTS_PLUGIN_MARYTTS_VERSION))
# PYTHON_OVOS_TTS_PLUGIN_MARYTTS_SETUP_TYPE = setuptools
# PYTHON_OVOS_TTS_PLUGIN_MARYTTS_ENV = MYCROFT_LOOSE_REQUIREMENTS=true
# 
# $(eval $(python-package))
# 



