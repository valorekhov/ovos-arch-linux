_gh_org=OpenVoiceOS
_gh_proj=ovos-core
pkgname=python-ovos-core
_name=ovos-core
_unit_name_skills="ovos-skills-messagebus"
_commit='d7ef2293e1b15761d36690a13546b215d8542720'
pkgver='0.0.8'
pkgrel=00
pkgdesc='OVOS-core is a backwards-compatible descendant of
Mycroft-core, the central component of Mycroft'
arch=('any')
url='https://github.com/OpenVoiceOS/ovos-core/'
license=('Apache')
depends=('ovos-service-base' 'ovos-messagebus-server' 'python' 'python-sdnotify' \
)
conflicts=( 'python-adapt-parser>=2.0.0' \
makedepends=(python-build python-installer python-wheel python-setuptools)
provides=("$_unit_name_skills")
conflicts+=("$_unit_name_skills")
install="ovos-skills.install"

#### Automatically generated dependencies. Do not edit.
depends+=(
'python-adapt-parser>=1.0.0' # adapt-parser<2.0.0,>=1.0.0
'python-combo-lock>=0.2.2' # combo-lock<0.3,>=0.2.2
'python-dateutil>=2.6' # python-dateutil<3.0,>=2.6
'python-ovos-backend-client>=0.1.0' # ovos-backend-client<2.0.0,>=0.1.0
'python-ovos-bus-client>=0.0.9' # ovos_bus_client<1.0.0,>=0.0.9
'python-ovos-config>=0.0.13' # ovos-config<1.0.0,>=0.0.13
'python-ovos-lingua-franca>=0.4.7' # ovos-lingua-franca<1.0.0,>=0.4.7
'python-ovos-plugin-manager>=0.0.26' # ovos-plugin-manager<1.0.0,>=0.0.26
'python-ovos-utils>=0.0.38' # ovos-utils<1.0.0,>=0.0.38
'python-ovos-workshop>=0.0.16' # ovos-workshop<1.0.0,>=0.0.16
'python-padacioso>=0.1.0' # padacioso<1.0.0,>=0.1.0
'python-requests>=2.26' # requests<3.0,>=2.26
'python-watchdog>=2.1' # watchdog<3.0,>=2.1
)
conflicts+=(
'python-adapt-parser>=2.0.0' # adapt-parser<2.0.0,>=1.0.0
'python-combo-lock>=0.3' # combo-lock<0.3,>=0.2.2
'python-dateutil>=3.0' # python-dateutil<3.0,>=2.6
'python-fann2>=1.1.0' # fann2<1.1.0,>=1.0.7; extra == "lgpl"
'python-ovos-audio>=1.0.0' # ovos-audio[extras]<1.0.0,>=0.0.0; extra == "mycroft"
'python-ovos-backend-client>=2.0.0' # ovos-backend-client<2.0.0,>=0.1.0
'python-ovos-bidirectional-translation-plugin>=1.0.0' # ovos-bidirectional-translation-plugin<1.0.0,>=0.0.1; extra == "plugins"
'python-ovos-bus-client>=1.0.0' # ovos_bus_client<1.0.0,>=0.0.9
'python-ovos-config>=1.0.0' # ovos-config<1.0.0,>=0.0.13
'python-ovos-dinkum-listener>=1.0.0' # ovos-dinkum-listener[extras]<1.0.0,>=0.0.1; extra == "mycroft"
'python-ovos-gui>=1.0.0' # ovos-gui[extras]<1.0.0,>=0.0.4; extra == "mycroft"
'python-ovos-lingua-franca>=1.0.0' # ovos-lingua-franca<1.0.0,>=0.4.7
'python-ovos-listener>=1.0.0' # ovos-listener<1.0.0,>=0.0.3; extra == "mycroft"
'python-ovos-messagebus>=1.0.0' # ovos-messagebus<1.0.0,>=0.0.1; extra == "mycroft"
'python-ovos-phal>=1.0.0' # ovos_PHAL[extras]<1.0.0,>=0.0.5; extra == "mycroft"
'python-ovos-plugin-manager>=1.0.0' # ovos-plugin-manager<1.0.0,>=0.0.26
'python-ovos-skill-alerts>=1.0.0' # ovos-skill-alerts<1.0.0,>=0.0.1; extra == "skills-essential"
'python-ovos-skill-application-launcher>=1.0.0' # ovos-skill-application-launcher<1.0.0,>=0.1.0; extra == "skills-desktop"
'python-ovos-skill-audio-recording>=1.0.0' # ovos-skill-audio-recording<1.0.0,>=0.1.0; extra == "skills-audio"
'python-ovos-skill-boot-finished>=1.0.0' # ovos-skill-boot-finished<1.0.0,>=0.1.0; extra == "skills-audio"
'python-ovos-skill-date-time>=1.0.0' # ovos-skill-date-time<1.0.0,>=0.2.3; extra == "skills-essential"
'python-ovos-skill-dictation>=1.0.0' # ovos-skill-dictation<1.0.0,>=0.1.0; extra == "skills-audio"
'python-ovos-skill-fallback-unknown>=1.0.0' # ovos-skill-fallback-unknown<1.0.0,>=0.0.4; extra == "skills-essential"
'python-ovos-skill-hello-world>=1.0.0' # ovos-skill-hello-world<1.0.0,>=0.0.4; extra == "skills-essential"
'python-ovos-skill-homescreen>=1.0.0' # ovos-skill-homescreen<1.0.0,>=0.0.3; extra == "skills-gui"
'python-ovos-skill-ip>=1.0.0' # ovos-skill-ip<1.0.0,>=0.1.0; extra == "skills-internet"
'python-ovos-skill-local-media>=1.0.0' # ovos-skill-local-media<1.0.0,>=0.2.0; extra == "skills-media"
'python-ovos-skill-naptime>=1.0.0' # ovos-skill-naptime<1.0.0,>=0.2.3; extra == "skills-audio"
'python-ovos-skill-parrot>=1.0.0' # ovos-skill-parrot<1.0.0,>=0.0.1; extra == "skills-audio"
'python-ovos-skill-personal>=1.0.0' # ovos-skill-personal<1.0.0,>=0.0.4; extra == "skills-essential"
'python-ovos-skill-pyradios>=1.0.0' # ovos-skill-pyradios<1.0.0,>=0.1.0; extra == "skills-media"
'python-ovos-skill-somafm>=1.0.0' # ovos-skill-somafm<1.0.0,>=0.0.2; extra == "skills-media"
'python-ovos-skill-speedtest>=1.0.0' # ovos-skill-speedtest<1.0.0,>=0.1.0; extra == "skills-internet"
'python-ovos-skill-spelling>=1.0.0' # ovos-skill-spelling<1.0.0,>=0.1.0; extra == "skills-essential"
'python-ovos-skill-volume>=1.0.0' # ovos-skill-volume<1.0.0,>=0.0.2; extra == "skills-audio"
'python-ovos-skill-weather>=1.0.0' # ovos-skill-weather<1.0.0,>=0.0.1; extra == "skills-internet"
'python-ovos-skill-wikihow>=1.0.0' # ovos-skill-wikihow<1.0.0,>=0.2.0; extra == "skills-internet"
'python-ovos-skill-wikipedia>=1.0.0' # ovos-skill-wikipedia<1.0.0,>=0.5.0; extra == "skills-internet"
'python-ovos-skill-youtube-music>=1.0.0' # ovos-skill-youtube-music<1.0.0,>=0.1.1; extra == "skills-media"
'python-ovos-translate-server-plugin>=1.0.0' # ovos-translate-server-plugin<1.0.0,>=0.0.1; extra == "plugins"
'python-ovos-tts-plugin-mimic>=1.0.0' # ovos-tts-plugin-mimic<1.0.0,>=0.2.8; extra == "mycroft"
'python-ovos-utils>=1.0.0' # ovos-utils<1.0.0,>=0.0.38
'python-ovos-utterance-corrections-plugin>=1.0.0' # ovos-utterance-corrections-plugin<1.0.0,>=0.0.0; extra == "plugins"
'python-ovos-utterance-normalizer>=1.0.0' # ovos-utterance-normalizer<1.0.0,>=0.1.0; extra == "plugins"
'python-ovos-utterance-plugin-cancel>=1.0.0' # ovos-utterance-plugin-cancel<1.0.0,>=0.0.1; extra == "plugins"
'python-ovos-workshop>=1.0.0' # ovos-workshop<1.0.0,>=0.0.16
'python-ovos-ww-plugin-pocketsphinx>=1.0.0' # ovos-ww-plugin-pocketsphinx<1.0.0,>=0.1; extra == "mycroft"
'python-ovos-ww-plugin-precise>=1.0.0' # ovos-ww-plugin-precise<1.0.0,>=0.1; extra == "mycroft"
'python-padacioso>=1.0.0' # padacioso<1.0.0,>=0.1.0
'python-padaos>=0.2' # padaos<0.2,>=0.1; extra == "lgpl"
'python-padatious>=0.5.0' # padatious<0.5.0,>=0.4.8; extra == "lgpl"
'python-requests>=3.0' # requests<3.0,>=2.26
'python-skill-ddg>=1.0.0' # skill-ddg<1.0.0,>=0.0.2; extra == "skills-internet"
'python-skill-news>=1.0.0' # skill-news<1.0.0,>=0.0.4; extra == "skills-media"
'python-skill-ovos-fallback-chatgpt>=1.0.0' # skill-ovos-fallback-chatgpt<1.0.0,>=0.0.2; extra == "skills-internet"
'python-skill-wolfie>=1.0.0' # skill-wolfie<1.0.0,>=0.2.0; extra == "skills-internet"
'python-skill-wordnet>=1.0.0' # skill-wordnet<1.0.0,>=0.0.1; extra == "skills-essential"
'python-watchdog>=3.0' # watchdog<3.0,>=2.1
)
optdepends+=(
'python-fann2>=1.0.7' # fann2<1.1.0,>=1.0.7; extra == "lgpl"
'python-mock-msm>=0.9' # mock_msm>=0.9; extra == "deprecated"
'python-msm' # msm; extra == "deprecated"
'python-mycroft-messagebus-client' # mycroft-messagebus-client; extra == "deprecated"
'python-ovos-audio>=0.0.0' # ovos-audio[extras]<1.0.0,>=0.0.0; extra == "mycroft"
'python-ovos-bidirectional-translation-plugin>=0.0.1' # ovos-bidirectional-translation-plugin<1.0.0,>=0.0.1; extra == "plugins"
'python-ovos-classifiers' # ovos-classifiers; extra == "plugins"
'python-ovos-cli-client' # ovos_cli_client; extra == "deprecated"
'python-ovos-dinkum-listener>=0.0.1' # ovos-dinkum-listener[extras]<1.0.0,>=0.0.1; extra == "mycroft"
'python-ovos-gui>=0.0.4' # ovos-gui[extras]<1.0.0,>=0.0.4; extra == "mycroft"
'python-ovos-listener>=0.0.3' # ovos-listener<1.0.0,>=0.0.3; extra == "mycroft"
'python-ovos-messagebus>=0.0.1' # ovos-messagebus<1.0.0,>=0.0.1; extra == "mycroft"
'python-ovos-phal>=0.0.5' # ovos_PHAL[extras]<1.0.0,>=0.0.5; extra == "mycroft"
'python-ovos-skill-alerts>=0.0.1' # ovos-skill-alerts<1.0.0,>=0.0.1; extra == "skills-essential"
'python-ovos-skill-application-launcher>=0.1.0' # ovos-skill-application-launcher<1.0.0,>=0.1.0; extra == "skills-desktop"
'python-ovos-skill-audio-recording>=0.1.0' # ovos-skill-audio-recording<1.0.0,>=0.1.0; extra == "skills-audio"
'python-ovos-skill-boot-finished>=0.1.0' # ovos-skill-boot-finished<1.0.0,>=0.1.0; extra == "skills-audio"
'python-ovos-skill-date-time>=0.2.3' # ovos-skill-date-time<1.0.0,>=0.2.3; extra == "skills-essential"
'python-ovos-skill-dictation>=0.1.0' # ovos-skill-dictation<1.0.0,>=0.1.0; extra == "skills-audio"
'python-ovos-skill-fallback-unknown>=0.0.4' # ovos-skill-fallback-unknown<1.0.0,>=0.0.4; extra == "skills-essential"
'python-ovos-skill-hello-world>=0.0.4' # ovos-skill-hello-world<1.0.0,>=0.0.4; extra == "skills-essential"
'python-ovos-skill-homescreen>=0.0.3' # ovos-skill-homescreen<1.0.0,>=0.0.3; extra == "skills-gui"
'python-ovos-skill-ip>=0.1.0' # ovos-skill-ip<1.0.0,>=0.1.0; extra == "skills-internet"
'python-ovos-skill-local-media>=0.2.0' # ovos-skill-local-media<1.0.0,>=0.2.0; extra == "skills-media"
'python-ovos-skill-naptime>=0.2.3' # ovos-skill-naptime<1.0.0,>=0.2.3; extra == "skills-audio"
'python-ovos-skill-parrot>=0.0.1' # ovos-skill-parrot<1.0.0,>=0.0.1; extra == "skills-audio"
'python-ovos-skill-personal>=0.0.4' # ovos-skill-personal<1.0.0,>=0.0.4; extra == "skills-essential"
'python-ovos-skill-pyradios>=0.1.0' # ovos-skill-pyradios<1.0.0,>=0.1.0; extra == "skills-media"
'python-ovos-skill-somafm>=0.0.2' # ovos-skill-somafm<1.0.0,>=0.0.2; extra == "skills-media"
'python-ovos-skill-speedtest>=0.1.0' # ovos-skill-speedtest<1.0.0,>=0.1.0; extra == "skills-internet"
'python-ovos-skill-spelling>=0.1.0' # ovos-skill-spelling<1.0.0,>=0.1.0; extra == "skills-essential"
'python-ovos-skill-volume>=0.0.2' # ovos-skill-volume<1.0.0,>=0.0.2; extra == "skills-audio"
'python-ovos-skill-weather>=0.0.1' # ovos-skill-weather<1.0.0,>=0.0.1; extra == "skills-internet"
'python-ovos-skill-wikihow>=0.2.0' # ovos-skill-wikihow<1.0.0,>=0.2.0; extra == "skills-internet"
'python-ovos-skill-wikipedia>=0.5.0' # ovos-skill-wikipedia<1.0.0,>=0.5.0; extra == "skills-internet"
'python-ovos-skill-youtube-music>=0.1.1' # ovos-skill-youtube-music<1.0.0,>=0.1.1; extra == "skills-media"
'python-ovos-translate-server-plugin>=0.0.1' # ovos-translate-server-plugin<1.0.0,>=0.0.1; extra == "plugins"
'python-ovos-tts-plugin-mimic>=0.2.8' # ovos-tts-plugin-mimic<1.0.0,>=0.2.8; extra == "mycroft"
'python-ovos-utterance-corrections-plugin>=0.0.0' # ovos-utterance-corrections-plugin<1.0.0,>=0.0.0; extra == "plugins"
'python-ovos-utterance-normalizer>=0.1.0' # ovos-utterance-normalizer<1.0.0,>=0.1.0; extra == "plugins"
'python-ovos-utterance-plugin-cancel>=0.0.1' # ovos-utterance-plugin-cancel<1.0.0,>=0.0.1; extra == "plugins"
'python-ovos-ww-plugin-pocketsphinx>=0.1' # ovos-ww-plugin-pocketsphinx<1.0.0,>=0.1; extra == "mycroft"
'python-ovos-ww-plugin-precise>=0.1' # ovos-ww-plugin-precise<1.0.0,>=0.1; extra == "mycroft"
'python-padaos>=0.1' # padaos<0.2,>=0.1; extra == "lgpl"
'python-padatious>=0.4.8' # padatious<0.5.0,>=0.4.8; extra == "lgpl"
'python-pillow>=8.3' # pillow>=8.3; extra == "deprecated"
'python-pyalsaaudio>=0.8' # pyalsaaudio>=0.8; extra == "deprecated"
'python-pyserial>=3.0' # pyserial>=3.0; extra == "deprecated"
'python-skill-ddg>=0.0.2' # skill-ddg<1.0.0,>=0.0.2; extra == "skills-internet"
'python-skill-news>=0.0.4' # skill-news<1.0.0,>=0.0.4; extra == "skills-media"
'python-skill-ovos-fallback-chatgpt>=0.0.2' # skill-ovos-fallback-chatgpt<1.0.0,>=0.0.2; extra == "skills-internet"
'python-skill-wolfie>=0.2.0' # skill-wolfie<1.0.0,>=0.2.0; extra == "skills-internet"
'python-skill-wordnet>=0.0.1' # skill-wordnet<1.0.0,>=0.0.1; extra == "skills-essential"
'python-vlc>=1.1.2' # python-vlc>=1.1.2; extra == "deprecated"
)

#### End of automatically generated dependencies.
source=("https://github.com/$_gh_org/$_gh_proj/archive/$_commit.tar.gz"
    "$_unit_name_skills.service"
    "ovos-systemd_skills_messagebus.py"
    "ovos-skills.install" 
)
sha256sums=('5134e12ad807bc8a424ad326c42d3cc0d438efde6fd9bfbd4e21f80ae76d8f5e'
            '8a9491bfc586cb801d0b904205f8e4f98a23333d48a717dccc0e62c5949398ad'
            'bd403865bdadd82502beb861589da1e050d6885702b6b1a5f6911cdf2de4742a'
            'ae8e3b0dd89e2c7bfff121bb6c6ac75632deafc3cacd776ee9e06cd6ba849270')

prepare() {
    cd "$srcdir"
    for patch in "../"*.patch; do
        if [ -f "$patch" ]; then
          echo "Applying patch $patch"
          patch --forward --strip=1 --input="${PWD}/${patch}" --directory="${srcdir}/${_name}-${_commit}"
        fi
    done
}

pkgver(){
    cd "$srcdir/$_name-$_commit"
    echo "$(python setup.py --version)"
}

build() {
    cd "$_name-$_commit"
    python -m build --wheel --no-isolation
}

check() {
    cd "$_name-$_commit"

    local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")
    local python_version=$(python -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')

    # nosetests
    # pytest
}

package() {
    cd "$_name-$_commit"

    echo "Installing $pkgname to $pkgdir"
    # some packages produce multiple wheels, install the one specific to the version of the package
    python -m installer --destdir="$pkgdir" dist/*$pkgver*.whl

    # Optional: Copy documentation files
    if [ -d "$srcdir/$pkgname/docs" ]; then
        mkdir -p "$pkgdir/usr/share/doc/$pkgname"  # Create doc directory
        cp -r "$srcdir/$pkgname/docs" "$pkgdir/usr/share/doc/$pkgname" || true
        chmod 644 "$pkgdir/usr/share/doc/$pkgname"/*.txt  || true # Set read permissions for documentation files
    fi
    
    # Optional: Remove unused files or directories
    # For example, removing unneeded binaries, license files, etc.
    # rm "$pkgdir/usr/bin/unneeded_binary"  # Remove unneeded binary
    # rm "$pkgdir/usr/share/doc/$pkgname/unneeded_license.txt"  # Remove unneeded license file

    # Search for license files in the original source directory
    mkdir -p $pkgdir/usr/share/licenses/$pkgname
    find "$srcdir" -maxdepth 2 -type f -name 'LICENSE*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +
    find "$srcdir" -maxdepth 1 -type f -name 'COPYING*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +

    mkdir -p "$pkgdir/usr/lib/systemd/system"
    install -Dm644 "$srcdir/$_unit_name_skills.service" "$pkgdir/usr/lib/systemd/system"

    mkdir -p "$pkgdir/etc/systemd/system/$_unit_name_skills.d/"
    install -Dm644 "$srcdir/ovos-systemd_skills_messagebus.py" "$pkgdir/etc/systemd/system/$_unit_name_skills.d/"
}


################################################################################
# #
# # python-ovos-core
# #
# ################################################################################
# 
# PYTHON_OVOS_CORE_VERSION = e4cabf257c278e183d5c77aaaa3c920028e4f51f
# PYTHON_OVOS_CORE_SITE = $(call github,OpenVoiceOS,ovos-core,$(PYTHON_OVOS_CORE_VERSION))
# PYTHON_OVOS_CORE_SETUP_TYPE = setuptools
# PYTHON_OVOS_CORE_LICENSE_FILES = LICENSE
# PYTHON_OVOS_CORE_ENV = MYCROFT_LOOSE_REQUIREMENTS=true
# 
# $(eval $(python-package))
# 



