_gh_org=OpenVoiceOS
_gh_proj=ovos_PHAL
pkgname=python-ovos-phal
_name=ovos-PHAL
_unit_name="ovos-phal-messagebus"
_commit='1004dcea8ed5c98e02a51db0ca2e9134e966788c'
pkgver='0.2.3'
pkgrel=00
pkgdesc='OVOS-PHAL'
arch=('any')
url='https://github.com/OpenVoiceOS/ovos_PHAL/'
license=('')
depends=('ovos-core' 'ovos-service-base' 'ovos-messagebus-server' 'python' 'python-sdnotify' \
)
makedepends=(python-build python-installer python-wheel python-setuptools)
provides=("$_unit_name" "ovos-admin-phal-messagebus")
conflicts=("$_unit_name" "ovos-admin-phal-messagebus")

#### Automatically generated dependencies. Do not edit.
depends+=(
'python-ovos-bus-client>=0.0.8' # ovos_bus_client<1.0.0,>=0.0.8
'python-ovos-config>=0.0.12' # ovos-config<1.0.0,>=0.0.12
'python-ovos-plugin-manager>=0.0.25' # ovos-plugin-manager<1.0.0,>=0.0.25
'python-ovos-utils>=0.0.38' # ovos-utils<1.0.0,>=0.0.38
'python-ovos-workshop>=0.0.13' # ovos-workshop<1.0.0,>=0.0.13
)
conflicts+=(
'python-ovos-bus-client>=1.0.0' # ovos_bus_client<1.0.0,>=0.0.8
'python-ovos-config>=1.0.0' # ovos-config<1.0.0,>=0.0.12
'python-ovos-phal-plugin-alsa>=1.0.0' # ovos-phal-plugin-alsa<1.0.0,>=0.0.1; extra == "linux"
'python-ovos-phal-plugin-balena-wifi>=1.0.0' # ovos-PHAL-plugin-balena-wifi<1.0.0,>=0.0.1; extra == "mk1"
'python-ovos-phal-plugin-connectivity-events>=1.0.0' # ovos-PHAL-plugin-connectivity-events<1.0.0,>=0.0.1; extra == "extras"
'python-ovos-phal-plugin-hotkeys>=1.0.0' # ovos-PHAL-plugin-hotkeys<1.0.0,>=0.0.0; extra == "mk2"
'python-ovos-phal-plugin-ipgeo>=1.0.0' # ovos-phal-plugin-ipgeo<1.0.0,>=0.1.0; extra == "extras"
'python-ovos-phal-plugin-mac>=1.0.0' # ovos-phal-plugin-mac<1.0.0,>=0.0.1; extra == "mac"
'python-ovos-phal-plugin-mk1>=1.0.0' # ovos-PHAL-plugin-mk1<1.0.0,>=0.0.1; extra == "mk1"
'python-ovos-phal-plugin-mk2-fan-control>=1.0.0' # ovos-PHAL-plugin-mk2-fan-control<1.0.0,>=0.0.1; extra == "mk2dev"
'python-ovos-phal-plugin-network-manager>=2.0.0' # ovos-PHAL-plugin-network-manager<2.0.0,>=0.0.1; extra == "linux"
'python-ovos-phal-plugin-oauth>=1.0.0' # ovos-PHAL-plugin-oauth<1.0.0,>=0.0.1; extra == "extras"
'python-ovos-phal-plugin-system>=1.0.0' # ovos-phal-plugin-system<1.0.0,>=0.1.0; extra == "linux"
'python-ovos-phal-plugin-wallpaper-manager>=1.0.0' # ovos-PHAL-plugin-wallpaper-manager<1.0.0,>=0.0.1; extra == "linux"
'python-ovos-phal-plugin-wifi-setup>=2.0.0' # ovos-PHAL-plugin-wifi-setup<2.0.0,>=1.0.0; extra == "extras"
'python-ovos-plugin-manager>=1.0.0' # ovos-plugin-manager<1.0.0,>=0.0.25
'python-ovos-utils>=1.0.0' # ovos-utils<1.0.0,>=0.0.38
'python-ovos-workshop>=1.0.0' # ovos-workshop<1.0.0,>=0.0.13
)
optdepends+=(
'python-ovos-phal-plugin-alsa>=0.0.1' # ovos-phal-plugin-alsa<1.0.0,>=0.0.1; extra == "linux"
'python-ovos-phal-plugin-balena-wifi>=0.0.1' # ovos-PHAL-plugin-balena-wifi<1.0.0,>=0.0.1; extra == "mk1"
'python-ovos-phal-plugin-connectivity-events>=0.0.1' # ovos-PHAL-plugin-connectivity-events<1.0.0,>=0.0.1; extra == "extras"
'python-ovos-phal-plugin-hotkeys>=0.0.0' # ovos-PHAL-plugin-hotkeys<1.0.0,>=0.0.0; extra == "mk2"
'python-ovos-phal-plugin-ipgeo>=0.1.0' # ovos-phal-plugin-ipgeo<1.0.0,>=0.1.0; extra == "extras"
'python-ovos-phal-plugin-mac>=0.0.1' # ovos-phal-plugin-mac<1.0.0,>=0.0.1; extra == "mac"
'python-ovos-phal-plugin-mk1>=0.0.1' # ovos-PHAL-plugin-mk1<1.0.0,>=0.0.1; extra == "mk1"
'python-ovos-phal-plugin-mk2-fan-control>=0.0.1' # ovos-PHAL-plugin-mk2-fan-control<1.0.0,>=0.0.1; extra == "mk2dev"
'python-ovos-phal-plugin-network-manager>=0.0.1' # ovos-PHAL-plugin-network-manager<2.0.0,>=0.0.1; extra == "linux"
'python-ovos-phal-plugin-oauth>=0.0.1' # ovos-PHAL-plugin-oauth<1.0.0,>=0.0.1; extra == "extras"
'python-ovos-phal-plugin-system>=0.1.0' # ovos-phal-plugin-system<1.0.0,>=0.1.0; extra == "linux"
'python-ovos-phal-plugin-wallpaper-manager>=0.0.1' # ovos-PHAL-plugin-wallpaper-manager<1.0.0,>=0.0.1; extra == "linux"
'python-ovos-phal-plugin-wifi-setup>=1.0.0' # ovos-PHAL-plugin-wifi-setup<2.0.0,>=1.0.0; extra == "extras"
)

#### End of automatically generated dependencies.
source=("https://github.com/$_gh_org/$_gh_proj/archive/$_commit.tar.gz" \
    "$_unit_name.service" \
    "ovos-admin-phal-messagebus.service" \
    "ovos-systemd_phal_messagebus.py" \
    "ovos-systemd_admin_phal_messagebus.py" \
    # "python-ovos-gui.install" \
    )
sha256sums=('e08af2b0c9c8f664ac8f46788527ad59691497cad565cea1fc9be475d3a76841'
            '134283f2448d53d9d7b8d977044525b56ff5571e655aaaa3aea3e3e2d2c1ec2f'
            '4337ab11d89f70bdb2d428e03505d19d42e35652c8c21dfb55d7bb2d3764bbb6'
            '2c920defb96d86406d30890da1262520d575b54ad9c830e3b5ad00c88456c4bf'
            '846378e2d1153dbcd40b77195d1114d4f79819b83785e24f9f17662395ea0958')

prepare() {
    cd "$srcdir"
    for patch in "../"*.patch; do
        if [ -f "$patch" ]; then
          echo "Applying patch $patch"
          patch --forward --strip=1 --input="${PWD}/${patch}" --directory="${srcdir}/${_name}-${_commit}"
        fi
    done
}

pkgver(){
    cd "$srcdir/$_name-$_commit"
    echo "$(python setup.py --version)"
}

build() {
    cd "$_name-$_commit"
    python -m build --wheel --no-isolation
}

check() {
    cd "$_name-$_commit"

    local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")
    local python_version=$(python -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')

    # nosetests
    # pytest
}

package() {
    cd "$_name-$_commit"

    echo "Installing $pkgname to $pkgdir"
    # some packages produce multiple wheels, install the one specific to the version of the package
    python -m installer --destdir="$pkgdir" dist/*$pkgver*.whl

    # Optional: Copy documentation files
    if [ -d "$srcdir/$pkgname/docs" ]; then
        mkdir -p "$pkgdir/usr/share/doc/$pkgname"  # Create doc directory
        cp -r "$srcdir/$pkgname/docs" "$pkgdir/usr/share/doc/$pkgname" || true
        chmod 644 "$pkgdir/usr/share/doc/$pkgname"/*.txt  || true # Set read permissions for documentation files
    fi
    
    # Optional: Remove unused files or directories
    # For example, removing unneeded binaries, license files, etc.
    # rm "$pkgdir/usr/bin/unneeded_binary"  # Remove unneeded binary
    # rm "$pkgdir/usr/share/doc/$pkgname/unneeded_license.txt"  # Remove unneeded license file

    # Search for license files in the original source directory
    mkdir -p $pkgdir/usr/share/licenses/$pkgname
    find "$srcdir" -maxdepth 2 -type f -name 'LICENSE*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +
    find "$srcdir" -maxdepth 1 -type f -name 'COPYING*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +

    mkdir -p "$pkgdir/usr/lib/systemd/system"
    install -Dm644 "$srcdir/$_unit_name.service" "$pkgdir/usr/lib/systemd/system"
    install -Dm644 "$srcdir/ovos-admin-phal-messagebus.service" "$pkgdir/usr/lib/systemd/system"

    mkdir -p "$pkgdir/etc/systemd/system/$_unit_name.d/"
    install -Dm644 "$srcdir/ovos-systemd_phal_messagebus.py" "$pkgdir/etc/systemd/system/$_unit_name.d/"
    install -Dm644 "$srcdir/ovos-systemd_admin_phal_messagebus.py" "$pkgdir/etc/systemd/system/$_unit_name.d/"
}


################################################################################
# #
# # python-ovos-phal
# #
# ################################################################################
# 
# PYTHON_OVOS_PHAL_VERSION = b03fa1e3ba1202a34a755bb8979e0380419a02b3
# PYTHON_OVOS_PHAL_SITE = $(call github,OpenVoiceOS,ovos_PHAL,$(PYTHON_OVOS_PHAL_VERSION))
# PYTHON_OVOS_PHAL_SETUP_TYPE = setuptools
# PYTHON_OVOS_PHAL_LICENSE_FILES = LICENSE
# PYTHON_OVOS_PHAL_ENV = MYCROFT_LOOSE_REQUIREMENTS=true
# 
# $(eval $(python-package))
# 




