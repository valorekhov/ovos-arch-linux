_gh_org=OpenVoiceOS
_gh_proj=ovos-ocp-audio-plugin
pkgname=python-ovos-ocp-audio-plugin
_name=ovos-ocp-audio-plugin
_commit='8ceaa0a3ecadf5728a3c9a5f93ec41ce6c06cb09'
pkgver='1.1.0'
pkgrel=00
pkgdesc='OVOS GUI mediaplayer plugin'
arch=('any')
url='https://github.com/OpenVoiceOS/ovos-ocp-audio-plugin/'
license=('UNKNOWN')
depends=(python \
gstreamer gst-plugins-base gst-plugins-good gst-plugins-bad gst-plugins-ugly ffmpeg
)
conflicts=( 'python-ovos-ocp-audio-plugin' \
makedepends=(python-build python-installer python-wheel python-setuptools)

#### Automatically generated dependencies. Do not edit.
depends+=(
'python-dbus-next' # dbus-next
'python-ovos-bus-client>=0.0.7' # ovos_bus_client<1.0.0,>=0.0.7
'python-ovos-plugin-manager>=0.0.26' # ovos-plugin-manager<1.0.0,>=0.0.26
'python-ovos-utils>=0.0.38' # ovos-utils<1.0.0,>=0.0.38
'python-ovos-workshop>=0.0.16' # ovos-workshop<1.0.0,>=0.0.16
'python-padacioso>=0.1.1' # padacioso>=0.1.1,~=0.1
)
conflicts+=(
'python-ovos-audio-plugin-simple>=1.0.0' # ovos_audio_plugin_simple<1.0.0,>=0.0.1; extra == "extractors"
'python-ovos-bus-client>=1.0.0' # ovos_bus_client<1.0.0,>=0.0.7
'python-ovos-ocp-m3u-plugin>=1.0.0' # ovos-ocp-m3u-plugin<1.0.0,>=0.0.1; extra == "extractors"
'python-ovos-ocp-news-plugin>=1.0.0' # ovos-ocp-news-plugin<1.0.0,>=0.0.3; extra == "extractors"
'python-ovos-ocp-rss-plugin>=1.0.0' # ovos-ocp-rss-plugin<1.0.0,>=0.0.2; extra == "extractors"
'python-ovos-ocp-youtube-plugin>=1.0.0' # ovos-ocp-youtube-plugin<1.0.0,>=0.0.1; extra == "extractors"
'python-ovos-plugin-manager>=1.0.0' # ovos-plugin-manager<1.0.0,>=0.0.26
'python-ovos-utils>=1.0.0' # ovos-utils<1.0.0,>=0.0.38
'python-ovos-workshop>=1.0.0' # ovos-workshop<1.0.0,>=0.0.16
)
optdepends+=(
'python-ovos-audio-plugin-simple>=0.0.1' # ovos_audio_plugin_simple<1.0.0,>=0.0.1; extra == "extractors"
'python-ovos-ocp-files-plugin>=0.13' # ovos-ocp-files-plugin~=0.13; extra == "extractors"
'python-ovos-ocp-m3u-plugin>=0.0.1' # ovos-ocp-m3u-plugin<1.0.0,>=0.0.1; extra == "extractors"
'python-ovos-ocp-news-plugin>=0.0.3' # ovos-ocp-news-plugin<1.0.0,>=0.0.3; extra == "extractors"
'python-ovos-ocp-rss-plugin>=0.0.2' # ovos-ocp-rss-plugin<1.0.0,>=0.0.2; extra == "extractors"
'python-ovos-ocp-youtube-plugin>=0.0.1' # ovos-ocp-youtube-plugin<1.0.0,>=0.0.1; extra == "extractors"
)

#### End of automatically generated dependencies.
source=("https://github.com/$_gh_org/$_gh_proj/archive/$_commit.tar.gz")
sha256sums=('51613142a742164113bba0bbb73f3b77939ec78cf17155a88892ef177a87895b')

provides=('python-ovos-plugin-common-play' 'python-ovos-ocp-audio-plugin')

prepare() {
    cd "$srcdir"
    for patch in "../"*.patch; do
        if [ -f "$patch" ]; then
          echo "Applying patch $patch"
          patch --forward --strip=1 --input="${PWD}/${patch}" --directory="${srcdir}/${_name}-${_commit}"
        fi
    done
}

pkgver(){
    cd "$srcdir/$_name-$_commit"
    echo "$(python setup.py --version)"
}

build() {
    cd "$_name-$_commit"
    python -m build --wheel --no-isolation
}

check() {
    cd "$_name-$_commit"

    local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")
    local python_version=$(python -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')

    # nosetests
    # pytest
}

package() {
    cd "$_name-$_commit"

    echo "Installing $pkgname to $pkgdir"
    # some packages produce multiple wheels, install the one specific to the version of the package
    python -m installer --destdir="$pkgdir" dist/*$pkgver*.whl

    # Optional: Copy documentation files
    if [ -d "$srcdir/$pkgname/docs" ]; then
        mkdir -p "$pkgdir/usr/share/doc/$pkgname"  # Create doc directory
        cp -r "$srcdir/$pkgname/docs" "$pkgdir/usr/share/doc/$pkgname" || true
        chmod 644 "$pkgdir/usr/share/doc/$pkgname"/*.txt  || true # Set read permissions for documentation files
    fi
    
    # Optional: Remove unused files or directories
    # For example, removing unneeded binaries, license files, etc.
    # rm "$pkgdir/usr/bin/unneeded_binary"  # Remove unneeded binary
    # rm "$pkgdir/usr/share/doc/$pkgname/unneeded_license.txt"  # Remove unneeded license file

    # Search for license files in the original source directory
    mkdir -p $pkgdir/usr/share/licenses/$pkgname
    find "$srcdir" -maxdepth 2 -type f -name 'LICENSE*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +
}


################################################################################
# #
# # python-ovos-ocp-audio-plugin
# #
# ################################################################################
# 
# PYTHON_OVOS_OCP_AUDIO_PLUGIN_VERSION = 31701ded43a4f7ff6c02833d6aaf1bc0740257fc
# PYTHON_OVOS_OCP_AUDIO_PLUGIN_SITE = $(call github,OpenVoiceOS,ovos-ocp-audio-plugin,$(PYTHON_OVOS_OCP_AUDIO_PLUGIN_VERSION))
# PYTHON_OVOS_OCP_AUDIO_PLUGIN_SETUP_TYPE = setuptools
# PYTHON_OVOS_OCP_AUDIO_PLUGIN_LICENSE_FILES = LICENSE
# PYTHON_OVOS_OCP_AUDIO_PLUGIN_ENV = MYCROFT_LOOSE_REQUIREMENTS=true
# 
# $(eval $(python-package))
# 




